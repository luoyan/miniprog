/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.xiaomi.miui.ad.thrift.model;

import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.apache.thrift.*;
import org.apache.thrift.async.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class MiuiAdQueryServiceLogAlgorithm implements TBase<MiuiAdQueryServiceLogAlgorithm, MiuiAdQueryServiceLogAlgorithm._Fields>, java.io.Serializable, Cloneable {
  private static final TStruct STRUCT_DESC = new TStruct("MiuiAdQueryServiceLogAlgorithm");

  private static final TField SCRIBE_INFO_FIELD_DESC = new TField("scribeInfo", TType.STRUCT, (short)1);
  private static final TField ALGORITHM_NAME_FIELD_DESC = new TField("algorithmName", TType.STRING, (short)2);
  private static final TField CLIENT_INFO_STR_FIELD_DESC = new TField("clientInfoStr", TType.STRING, (short)3);
  private static final TField UNKNOWN1_FIELD_DESC = new TField("unknown1", TType.I32, (short)4);
  private static final TField PACKAGE_NAME_LIST_FIELD_DESC = new TField("packageNameList", TType.STRING, (short)5);

  private MiuiAdQueryServiceLogScribeInfo scribeInfo;
  private String algorithmName;
  private String clientInfoStr;
  private int unknown1;
  private String packageNameList;

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements TFieldIdEnum {
    SCRIBE_INFO((short)1, "scribeInfo"),
    ALGORITHM_NAME((short)2, "algorithmName"),
    CLIENT_INFO_STR((short)3, "clientInfoStr"),
    UNKNOWN1((short)4, "unknown1"),
    PACKAGE_NAME_LIST((short)5, "packageNameList");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SCRIBE_INFO
          return SCRIBE_INFO;
        case 2: // ALGORITHM_NAME
          return ALGORITHM_NAME;
        case 3: // CLIENT_INFO_STR
          return CLIENT_INFO_STR;
        case 4: // UNKNOWN1
          return UNKNOWN1;
        case 5: // PACKAGE_NAME_LIST
          return PACKAGE_NAME_LIST;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __UNKNOWN1_ISSET_ID = 0;
  private BitSet __isset_bit_vector = new BitSet(1);

  public static final Map<_Fields, FieldMetaData> metaDataMap;
  static {
    Map<_Fields, FieldMetaData> tmpMap = new EnumMap<_Fields, FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SCRIBE_INFO, new FieldMetaData("scribeInfo", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, MiuiAdQueryServiceLogScribeInfo.class)));
    tmpMap.put(_Fields.ALGORITHM_NAME, new FieldMetaData("algorithmName", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.CLIENT_INFO_STR, new FieldMetaData("clientInfoStr", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.UNKNOWN1, new FieldMetaData("unknown1", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.PACKAGE_NAME_LIST, new FieldMetaData("packageNameList", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    FieldMetaData.addStructMetaDataMap(MiuiAdQueryServiceLogAlgorithm.class, metaDataMap);
  }

  public MiuiAdQueryServiceLogAlgorithm() {
  }

  public MiuiAdQueryServiceLogAlgorithm(
    MiuiAdQueryServiceLogScribeInfo scribeInfo,
    String algorithmName,
    String clientInfoStr,
    int unknown1,
    String packageNameList)
  {
    this();
    this.scribeInfo = scribeInfo;
    this.algorithmName = algorithmName;
    this.clientInfoStr = clientInfoStr;
    this.unknown1 = unknown1;
    setUnknown1IsSet(true);
    this.packageNameList = packageNameList;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public MiuiAdQueryServiceLogAlgorithm(MiuiAdQueryServiceLogAlgorithm other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    if (other.isSetScribeInfo()) {
      this.scribeInfo = new MiuiAdQueryServiceLogScribeInfo(other.scribeInfo);
    }
    if (other.isSetAlgorithmName()) {
      this.algorithmName = other.algorithmName;
    }
    if (other.isSetClientInfoStr()) {
      this.clientInfoStr = other.clientInfoStr;
    }
    this.unknown1 = other.unknown1;
    if (other.isSetPackageNameList()) {
      this.packageNameList = other.packageNameList;
    }
  }

  public MiuiAdQueryServiceLogAlgorithm deepCopy() {
    return new MiuiAdQueryServiceLogAlgorithm(this);
  }

  @Override
  public void clear() {
    this.scribeInfo = null;
    this.algorithmName = null;
    this.clientInfoStr = null;
    setUnknown1IsSet(false);
    this.unknown1 = 0;
    this.packageNameList = null;
  }

  public MiuiAdQueryServiceLogScribeInfo getScribeInfo() {
    return this.scribeInfo;
  }

  public void setScribeInfo(MiuiAdQueryServiceLogScribeInfo scribeInfo) {
    this.scribeInfo = scribeInfo;
  }

  public void unsetScribeInfo() {
    this.scribeInfo = null;
  }

  /** Returns true if field scribeInfo is set (has been asigned a value) and false otherwise */
  public boolean isSetScribeInfo() {
    return this.scribeInfo != null;
  }

  public void setScribeInfoIsSet(boolean value) {
    if (!value) {
      this.scribeInfo = null;
    }
  }

  public String getAlgorithmName() {
    return this.algorithmName;
  }

  public void setAlgorithmName(String algorithmName) {
    this.algorithmName = algorithmName;
  }

  public void unsetAlgorithmName() {
    this.algorithmName = null;
  }

  /** Returns true if field algorithmName is set (has been asigned a value) and false otherwise */
  public boolean isSetAlgorithmName() {
    return this.algorithmName != null;
  }

  public void setAlgorithmNameIsSet(boolean value) {
    if (!value) {
      this.algorithmName = null;
    }
  }

  public String getClientInfoStr() {
    return this.clientInfoStr;
  }

  public void setClientInfoStr(String clientInfoStr) {
    this.clientInfoStr = clientInfoStr;
  }

  public void unsetClientInfoStr() {
    this.clientInfoStr = null;
  }

  /** Returns true if field clientInfoStr is set (has been asigned a value) and false otherwise */
  public boolean isSetClientInfoStr() {
    return this.clientInfoStr != null;
  }

  public void setClientInfoStrIsSet(boolean value) {
    if (!value) {
      this.clientInfoStr = null;
    }
  }

  public int getUnknown1() {
    return this.unknown1;
  }

  public void setUnknown1(int unknown1) {
    this.unknown1 = unknown1;
    setUnknown1IsSet(true);
  }

  public void unsetUnknown1() {
    __isset_bit_vector.clear(__UNKNOWN1_ISSET_ID);
  }

  /** Returns true if field unknown1 is set (has been asigned a value) and false otherwise */
  public boolean isSetUnknown1() {
    return __isset_bit_vector.get(__UNKNOWN1_ISSET_ID);
  }

  public void setUnknown1IsSet(boolean value) {
    __isset_bit_vector.set(__UNKNOWN1_ISSET_ID, value);
  }

  public String getPackageNameList() {
    return this.packageNameList;
  }

  public void setPackageNameList(String packageNameList) {
    this.packageNameList = packageNameList;
  }

  public void unsetPackageNameList() {
    this.packageNameList = null;
  }

  /** Returns true if field packageNameList is set (has been asigned a value) and false otherwise */
  public boolean isSetPackageNameList() {
    return this.packageNameList != null;
  }

  public void setPackageNameListIsSet(boolean value) {
    if (!value) {
      this.packageNameList = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case SCRIBE_INFO:
      if (value == null) {
        unsetScribeInfo();
      } else {
        setScribeInfo((MiuiAdQueryServiceLogScribeInfo)value);
      }
      break;

    case ALGORITHM_NAME:
      if (value == null) {
        unsetAlgorithmName();
      } else {
        setAlgorithmName((String)value);
      }
      break;

    case CLIENT_INFO_STR:
      if (value == null) {
        unsetClientInfoStr();
      } else {
        setClientInfoStr((String)value);
      }
      break;

    case UNKNOWN1:
      if (value == null) {
        unsetUnknown1();
      } else {
        setUnknown1((Integer)value);
      }
      break;

    case PACKAGE_NAME_LIST:
      if (value == null) {
        unsetPackageNameList();
      } else {
        setPackageNameList((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case SCRIBE_INFO:
      return getScribeInfo();

    case ALGORITHM_NAME:
      return getAlgorithmName();

    case CLIENT_INFO_STR:
      return getClientInfoStr();

    case UNKNOWN1:
      return new Integer(getUnknown1());

    case PACKAGE_NAME_LIST:
      return getPackageNameList();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been asigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case SCRIBE_INFO:
      return isSetScribeInfo();
    case ALGORITHM_NAME:
      return isSetAlgorithmName();
    case CLIENT_INFO_STR:
      return isSetClientInfoStr();
    case UNKNOWN1:
      return isSetUnknown1();
    case PACKAGE_NAME_LIST:
      return isSetPackageNameList();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof MiuiAdQueryServiceLogAlgorithm)
      return this.equals((MiuiAdQueryServiceLogAlgorithm)that);
    return false;
  }

  public boolean equals(MiuiAdQueryServiceLogAlgorithm that) {
    if (that == null)
      return false;

    boolean this_present_scribeInfo = true && this.isSetScribeInfo();
    boolean that_present_scribeInfo = true && that.isSetScribeInfo();
    if (this_present_scribeInfo || that_present_scribeInfo) {
      if (!(this_present_scribeInfo && that_present_scribeInfo))
        return false;
      if (!this.scribeInfo.equals(that.scribeInfo))
        return false;
    }

    boolean this_present_algorithmName = true && this.isSetAlgorithmName();
    boolean that_present_algorithmName = true && that.isSetAlgorithmName();
    if (this_present_algorithmName || that_present_algorithmName) {
      if (!(this_present_algorithmName && that_present_algorithmName))
        return false;
      if (!this.algorithmName.equals(that.algorithmName))
        return false;
    }

    boolean this_present_clientInfoStr = true && this.isSetClientInfoStr();
    boolean that_present_clientInfoStr = true && that.isSetClientInfoStr();
    if (this_present_clientInfoStr || that_present_clientInfoStr) {
      if (!(this_present_clientInfoStr && that_present_clientInfoStr))
        return false;
      if (!this.clientInfoStr.equals(that.clientInfoStr))
        return false;
    }

    boolean this_present_unknown1 = true;
    boolean that_present_unknown1 = true;
    if (this_present_unknown1 || that_present_unknown1) {
      if (!(this_present_unknown1 && that_present_unknown1))
        return false;
      if (this.unknown1 != that.unknown1)
        return false;
    }

    boolean this_present_packageNameList = true && this.isSetPackageNameList();
    boolean that_present_packageNameList = true && that.isSetPackageNameList();
    if (this_present_packageNameList || that_present_packageNameList) {
      if (!(this_present_packageNameList && that_present_packageNameList))
        return false;
      if (!this.packageNameList.equals(that.packageNameList))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    HashCodeBuilder builder = new HashCodeBuilder();

    boolean present_scribeInfo = true && (isSetScribeInfo());
    builder.append(present_scribeInfo);
    if (present_scribeInfo)
      builder.append(scribeInfo);

    boolean present_algorithmName = true && (isSetAlgorithmName());
    builder.append(present_algorithmName);
    if (present_algorithmName)
      builder.append(algorithmName);

    boolean present_clientInfoStr = true && (isSetClientInfoStr());
    builder.append(present_clientInfoStr);
    if (present_clientInfoStr)
      builder.append(clientInfoStr);

    boolean present_unknown1 = true;
    builder.append(present_unknown1);
    if (present_unknown1)
      builder.append(unknown1);

    boolean present_packageNameList = true && (isSetPackageNameList());
    builder.append(present_packageNameList);
    if (present_packageNameList)
      builder.append(packageNameList);

    return builder.toHashCode();
  }

  public int compareTo(MiuiAdQueryServiceLogAlgorithm other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    MiuiAdQueryServiceLogAlgorithm typedOther = (MiuiAdQueryServiceLogAlgorithm)other;

    lastComparison = Boolean.valueOf(isSetScribeInfo()).compareTo(typedOther.isSetScribeInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetScribeInfo()) {
      lastComparison = TBaseHelper.compareTo(this.scribeInfo, typedOther.scribeInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAlgorithmName()).compareTo(typedOther.isSetAlgorithmName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAlgorithmName()) {
      lastComparison = TBaseHelper.compareTo(this.algorithmName, typedOther.algorithmName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientInfoStr()).compareTo(typedOther.isSetClientInfoStr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientInfoStr()) {
      lastComparison = TBaseHelper.compareTo(this.clientInfoStr, typedOther.clientInfoStr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUnknown1()).compareTo(typedOther.isSetUnknown1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUnknown1()) {
      lastComparison = TBaseHelper.compareTo(this.unknown1, typedOther.unknown1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPackageNameList()).compareTo(typedOther.isSetPackageNameList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPackageNameList()) {
      lastComparison = TBaseHelper.compareTo(this.packageNameList, typedOther.packageNameList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // SCRIBE_INFO
          if (field.type == TType.STRUCT) {
            this.scribeInfo = new MiuiAdQueryServiceLogScribeInfo();
            this.scribeInfo.read(iprot);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // ALGORITHM_NAME
          if (field.type == TType.STRING) {
            this.algorithmName = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // CLIENT_INFO_STR
          if (field.type == TType.STRING) {
            this.clientInfoStr = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // UNKNOWN1
          if (field.type == TType.I32) {
            this.unknown1 = iprot.readI32();
            setUnknown1IsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5: // PACKAGE_NAME_LIST
          if (field.type == TType.STRING) {
            this.packageNameList = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (this.scribeInfo != null) {
      oprot.writeFieldBegin(SCRIBE_INFO_FIELD_DESC);
      this.scribeInfo.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.algorithmName != null) {
      oprot.writeFieldBegin(ALGORITHM_NAME_FIELD_DESC);
      oprot.writeString(this.algorithmName);
      oprot.writeFieldEnd();
    }
    if (this.clientInfoStr != null) {
      oprot.writeFieldBegin(CLIENT_INFO_STR_FIELD_DESC);
      oprot.writeString(this.clientInfoStr);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(UNKNOWN1_FIELD_DESC);
    oprot.writeI32(this.unknown1);
    oprot.writeFieldEnd();
    if (this.packageNameList != null) {
      oprot.writeFieldBegin(PACKAGE_NAME_LIST_FIELD_DESC);
      oprot.writeString(this.packageNameList);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("MiuiAdQueryServiceLogAlgorithm(");
    boolean first = true;

    sb.append("scribeInfo:");
    if (this.scribeInfo == null) {
      sb.append("null");
    } else {
      sb.append(this.scribeInfo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("algorithmName:");
    if (this.algorithmName == null) {
      sb.append("null");
    } else {
      sb.append(this.algorithmName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("clientInfoStr:");
    if (this.clientInfoStr == null) {
      sb.append("null");
    } else {
      sb.append(this.clientInfoStr);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("unknown1:");
    sb.append(this.unknown1);
    first = false;
    if (!first) sb.append(", ");
    sb.append("packageNameList:");
    if (this.packageNameList == null) {
      sb.append("null");
    } else {
      sb.append(this.packageNameList);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

