/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.xiaomi.miui.ad.thrift.model;

import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.apache.thrift.*;
import org.apache.thrift.async.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class MiuiAdStoreServiceLogFiction implements TBase<MiuiAdStoreServiceLogFiction, MiuiAdStoreServiceLogFiction._Fields>, java.io.Serializable, Cloneable {
  private static final TStruct STRUCT_DESC = new TStruct("MiuiAdStoreServiceLogFiction");

  private static final TField SCRIBE_INFO_FIELD_DESC = new TField("scribeInfo", TType.STRUCT, (short)1);
  private static final TField LOG_TYPE_FIELD_DESC = new TField("logType", TType.STRING, (short)2);
  private static final TField EVENT_TYPE_FIELD_DESC = new TField("eventType", TType.LIST, (short)3);
  private static final TField PACKAGE_NAME_FIELD_DESC = new TField("packageName", TType.LIST, (short)4);
  private static final TField WIFI_TYPE_FIELD_DESC = new TField("wifiType", TType.LIST, (short)5);
  private static final TField UNKNOWN_CT_FIELD_DESC = new TField("unknownCt", TType.LIST, (short)6);
  private static final TField UNKNOWN_AT_FIELD_DESC = new TField("unknownAt", TType.LIST, (short)7);
  private static final TField UNKNOWN_T_FIELD_DESC = new TField("unknownT", TType.LIST, (short)8);
  private static final TField UNKNOWN_S_FIELD_DESC = new TField("unknownS", TType.LIST, (short)9);
  private static final TField UNKNOWN_PI_FIELD_DESC = new TField("unknownPi", TType.LIST, (short)10);
  private static final TField UNKNOWN_C_FIELD_DESC = new TField("unknownC", TType.LIST, (short)11);
  private static final TField TIMESTAMP_FIELD_DESC = new TField("timestamp", TType.I64, (short)12);

  private MiuiLogScribeInfo scribeInfo;
  private String logType;
  private List<String> eventType;
  private List<String> packageName;
  private List<String> wifiType;
  private List<String> unknownCt;
  private List<String> unknownAt;
  private List<String> unknownT;
  private List<String> unknownS;
  private List<String> unknownPi;
  private List<String> unknownC;
  private long timestamp;

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements TFieldIdEnum {
    SCRIBE_INFO((short)1, "scribeInfo"),
    LOG_TYPE((short)2, "logType"),
    EVENT_TYPE((short)3, "eventType"),
    PACKAGE_NAME((short)4, "packageName"),
    WIFI_TYPE((short)5, "wifiType"),
    UNKNOWN_CT((short)6, "unknownCt"),
    UNKNOWN_AT((short)7, "unknownAt"),
    UNKNOWN_T((short)8, "unknownT"),
    UNKNOWN_S((short)9, "unknownS"),
    UNKNOWN_PI((short)10, "unknownPi"),
    UNKNOWN_C((short)11, "unknownC"),
    TIMESTAMP((short)12, "timestamp");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SCRIBE_INFO
          return SCRIBE_INFO;
        case 2: // LOG_TYPE
          return LOG_TYPE;
        case 3: // EVENT_TYPE
          return EVENT_TYPE;
        case 4: // PACKAGE_NAME
          return PACKAGE_NAME;
        case 5: // WIFI_TYPE
          return WIFI_TYPE;
        case 6: // UNKNOWN_CT
          return UNKNOWN_CT;
        case 7: // UNKNOWN_AT
          return UNKNOWN_AT;
        case 8: // UNKNOWN_T
          return UNKNOWN_T;
        case 9: // UNKNOWN_S
          return UNKNOWN_S;
        case 10: // UNKNOWN_PI
          return UNKNOWN_PI;
        case 11: // UNKNOWN_C
          return UNKNOWN_C;
        case 12: // TIMESTAMP
          return TIMESTAMP;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __TIMESTAMP_ISSET_ID = 0;
  private BitSet __isset_bit_vector = new BitSet(1);

  public static final Map<_Fields, FieldMetaData> metaDataMap;
  static {
    Map<_Fields, FieldMetaData> tmpMap = new EnumMap<_Fields, FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SCRIBE_INFO, new FieldMetaData("scribeInfo", TFieldRequirementType.DEFAULT, 
        new StructMetaData(TType.STRUCT, MiuiLogScribeInfo.class)));
    tmpMap.put(_Fields.LOG_TYPE, new FieldMetaData("logType", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.EVENT_TYPE, new FieldMetaData("eventType", TFieldRequirementType.DEFAULT, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    tmpMap.put(_Fields.PACKAGE_NAME, new FieldMetaData("packageName", TFieldRequirementType.DEFAULT, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    tmpMap.put(_Fields.WIFI_TYPE, new FieldMetaData("wifiType", TFieldRequirementType.DEFAULT, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    tmpMap.put(_Fields.UNKNOWN_CT, new FieldMetaData("unknownCt", TFieldRequirementType.DEFAULT, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    tmpMap.put(_Fields.UNKNOWN_AT, new FieldMetaData("unknownAt", TFieldRequirementType.DEFAULT, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    tmpMap.put(_Fields.UNKNOWN_T, new FieldMetaData("unknownT", TFieldRequirementType.DEFAULT, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    tmpMap.put(_Fields.UNKNOWN_S, new FieldMetaData("unknownS", TFieldRequirementType.DEFAULT, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    tmpMap.put(_Fields.UNKNOWN_PI, new FieldMetaData("unknownPi", TFieldRequirementType.DEFAULT, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    tmpMap.put(_Fields.UNKNOWN_C, new FieldMetaData("unknownC", TFieldRequirementType.DEFAULT, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    tmpMap.put(_Fields.TIMESTAMP, new FieldMetaData("timestamp", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    FieldMetaData.addStructMetaDataMap(MiuiAdStoreServiceLogFiction.class, metaDataMap);
  }

  public MiuiAdStoreServiceLogFiction() {
  }

  public MiuiAdStoreServiceLogFiction(
    MiuiLogScribeInfo scribeInfo,
    String logType,
    List<String> eventType,
    List<String> packageName,
    List<String> wifiType,
    List<String> unknownCt,
    List<String> unknownAt,
    List<String> unknownT,
    List<String> unknownS,
    List<String> unknownPi,
    List<String> unknownC,
    long timestamp)
  {
    this();
    this.scribeInfo = scribeInfo;
    this.logType = logType;
    this.eventType = eventType;
    this.packageName = packageName;
    this.wifiType = wifiType;
    this.unknownCt = unknownCt;
    this.unknownAt = unknownAt;
    this.unknownT = unknownT;
    this.unknownS = unknownS;
    this.unknownPi = unknownPi;
    this.unknownC = unknownC;
    this.timestamp = timestamp;
    setTimestampIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public MiuiAdStoreServiceLogFiction(MiuiAdStoreServiceLogFiction other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    if (other.isSetScribeInfo()) {
      this.scribeInfo = new MiuiLogScribeInfo(other.scribeInfo);
    }
    if (other.isSetLogType()) {
      this.logType = other.logType;
    }
    if (other.isSetEventType()) {
      List<String> __this__eventType = new ArrayList<String>();
      for (String other_element : other.eventType) {
        __this__eventType.add(other_element);
      }
      this.eventType = __this__eventType;
    }
    if (other.isSetPackageName()) {
      List<String> __this__packageName = new ArrayList<String>();
      for (String other_element : other.packageName) {
        __this__packageName.add(other_element);
      }
      this.packageName = __this__packageName;
    }
    if (other.isSetWifiType()) {
      List<String> __this__wifiType = new ArrayList<String>();
      for (String other_element : other.wifiType) {
        __this__wifiType.add(other_element);
      }
      this.wifiType = __this__wifiType;
    }
    if (other.isSetUnknownCt()) {
      List<String> __this__unknownCt = new ArrayList<String>();
      for (String other_element : other.unknownCt) {
        __this__unknownCt.add(other_element);
      }
      this.unknownCt = __this__unknownCt;
    }
    if (other.isSetUnknownAt()) {
      List<String> __this__unknownAt = new ArrayList<String>();
      for (String other_element : other.unknownAt) {
        __this__unknownAt.add(other_element);
      }
      this.unknownAt = __this__unknownAt;
    }
    if (other.isSetUnknownT()) {
      List<String> __this__unknownT = new ArrayList<String>();
      for (String other_element : other.unknownT) {
        __this__unknownT.add(other_element);
      }
      this.unknownT = __this__unknownT;
    }
    if (other.isSetUnknownS()) {
      List<String> __this__unknownS = new ArrayList<String>();
      for (String other_element : other.unknownS) {
        __this__unknownS.add(other_element);
      }
      this.unknownS = __this__unknownS;
    }
    if (other.isSetUnknownPi()) {
      List<String> __this__unknownPi = new ArrayList<String>();
      for (String other_element : other.unknownPi) {
        __this__unknownPi.add(other_element);
      }
      this.unknownPi = __this__unknownPi;
    }
    if (other.isSetUnknownC()) {
      List<String> __this__unknownC = new ArrayList<String>();
      for (String other_element : other.unknownC) {
        __this__unknownC.add(other_element);
      }
      this.unknownC = __this__unknownC;
    }
    this.timestamp = other.timestamp;
  }

  public MiuiAdStoreServiceLogFiction deepCopy() {
    return new MiuiAdStoreServiceLogFiction(this);
  }

  @Override
  public void clear() {
    this.scribeInfo = null;
    this.logType = null;
    this.eventType = null;
    this.packageName = null;
    this.wifiType = null;
    this.unknownCt = null;
    this.unknownAt = null;
    this.unknownT = null;
    this.unknownS = null;
    this.unknownPi = null;
    this.unknownC = null;
    setTimestampIsSet(false);
    this.timestamp = 0;
  }

  public MiuiLogScribeInfo getScribeInfo() {
    return this.scribeInfo;
  }

  public void setScribeInfo(MiuiLogScribeInfo scribeInfo) {
    this.scribeInfo = scribeInfo;
  }

  public void unsetScribeInfo() {
    this.scribeInfo = null;
  }

  /** Returns true if field scribeInfo is set (has been asigned a value) and false otherwise */
  public boolean isSetScribeInfo() {
    return this.scribeInfo != null;
  }

  public void setScribeInfoIsSet(boolean value) {
    if (!value) {
      this.scribeInfo = null;
    }
  }

  public String getLogType() {
    return this.logType;
  }

  public void setLogType(String logType) {
    this.logType = logType;
  }

  public void unsetLogType() {
    this.logType = null;
  }

  /** Returns true if field logType is set (has been asigned a value) and false otherwise */
  public boolean isSetLogType() {
    return this.logType != null;
  }

  public void setLogTypeIsSet(boolean value) {
    if (!value) {
      this.logType = null;
    }
  }

  public int getEventTypeSize() {
    return (this.eventType == null) ? 0 : this.eventType.size();
  }

  public java.util.Iterator<String> getEventTypeIterator() {
    return (this.eventType == null) ? null : this.eventType.iterator();
  }

  public void addToEventType(String elem) {
    if (this.eventType == null) {
      this.eventType = new ArrayList<String>();
    }
    this.eventType.add(elem);
  }

  public List<String> getEventType() {
    return this.eventType;
  }

  public void setEventType(List<String> eventType) {
    this.eventType = eventType;
  }

  public void unsetEventType() {
    this.eventType = null;
  }

  /** Returns true if field eventType is set (has been asigned a value) and false otherwise */
  public boolean isSetEventType() {
    return this.eventType != null;
  }

  public void setEventTypeIsSet(boolean value) {
    if (!value) {
      this.eventType = null;
    }
  }

  public int getPackageNameSize() {
    return (this.packageName == null) ? 0 : this.packageName.size();
  }

  public java.util.Iterator<String> getPackageNameIterator() {
    return (this.packageName == null) ? null : this.packageName.iterator();
  }

  public void addToPackageName(String elem) {
    if (this.packageName == null) {
      this.packageName = new ArrayList<String>();
    }
    this.packageName.add(elem);
  }

  public List<String> getPackageName() {
    return this.packageName;
  }

  public void setPackageName(List<String> packageName) {
    this.packageName = packageName;
  }

  public void unsetPackageName() {
    this.packageName = null;
  }

  /** Returns true if field packageName is set (has been asigned a value) and false otherwise */
  public boolean isSetPackageName() {
    return this.packageName != null;
  }

  public void setPackageNameIsSet(boolean value) {
    if (!value) {
      this.packageName = null;
    }
  }

  public int getWifiTypeSize() {
    return (this.wifiType == null) ? 0 : this.wifiType.size();
  }

  public java.util.Iterator<String> getWifiTypeIterator() {
    return (this.wifiType == null) ? null : this.wifiType.iterator();
  }

  public void addToWifiType(String elem) {
    if (this.wifiType == null) {
      this.wifiType = new ArrayList<String>();
    }
    this.wifiType.add(elem);
  }

  public List<String> getWifiType() {
    return this.wifiType;
  }

  public void setWifiType(List<String> wifiType) {
    this.wifiType = wifiType;
  }

  public void unsetWifiType() {
    this.wifiType = null;
  }

  /** Returns true if field wifiType is set (has been asigned a value) and false otherwise */
  public boolean isSetWifiType() {
    return this.wifiType != null;
  }

  public void setWifiTypeIsSet(boolean value) {
    if (!value) {
      this.wifiType = null;
    }
  }

  public int getUnknownCtSize() {
    return (this.unknownCt == null) ? 0 : this.unknownCt.size();
  }

  public java.util.Iterator<String> getUnknownCtIterator() {
    return (this.unknownCt == null) ? null : this.unknownCt.iterator();
  }

  public void addToUnknownCt(String elem) {
    if (this.unknownCt == null) {
      this.unknownCt = new ArrayList<String>();
    }
    this.unknownCt.add(elem);
  }

  public List<String> getUnknownCt() {
    return this.unknownCt;
  }

  public void setUnknownCt(List<String> unknownCt) {
    this.unknownCt = unknownCt;
  }

  public void unsetUnknownCt() {
    this.unknownCt = null;
  }

  /** Returns true if field unknownCt is set (has been asigned a value) and false otherwise */
  public boolean isSetUnknownCt() {
    return this.unknownCt != null;
  }

  public void setUnknownCtIsSet(boolean value) {
    if (!value) {
      this.unknownCt = null;
    }
  }

  public int getUnknownAtSize() {
    return (this.unknownAt == null) ? 0 : this.unknownAt.size();
  }

  public java.util.Iterator<String> getUnknownAtIterator() {
    return (this.unknownAt == null) ? null : this.unknownAt.iterator();
  }

  public void addToUnknownAt(String elem) {
    if (this.unknownAt == null) {
      this.unknownAt = new ArrayList<String>();
    }
    this.unknownAt.add(elem);
  }

  public List<String> getUnknownAt() {
    return this.unknownAt;
  }

  public void setUnknownAt(List<String> unknownAt) {
    this.unknownAt = unknownAt;
  }

  public void unsetUnknownAt() {
    this.unknownAt = null;
  }

  /** Returns true if field unknownAt is set (has been asigned a value) and false otherwise */
  public boolean isSetUnknownAt() {
    return this.unknownAt != null;
  }

  public void setUnknownAtIsSet(boolean value) {
    if (!value) {
      this.unknownAt = null;
    }
  }

  public int getUnknownTSize() {
    return (this.unknownT == null) ? 0 : this.unknownT.size();
  }

  public java.util.Iterator<String> getUnknownTIterator() {
    return (this.unknownT == null) ? null : this.unknownT.iterator();
  }

  public void addToUnknownT(String elem) {
    if (this.unknownT == null) {
      this.unknownT = new ArrayList<String>();
    }
    this.unknownT.add(elem);
  }

  public List<String> getUnknownT() {
    return this.unknownT;
  }

  public void setUnknownT(List<String> unknownT) {
    this.unknownT = unknownT;
  }

  public void unsetUnknownT() {
    this.unknownT = null;
  }

  /** Returns true if field unknownT is set (has been asigned a value) and false otherwise */
  public boolean isSetUnknownT() {
    return this.unknownT != null;
  }

  public void setUnknownTIsSet(boolean value) {
    if (!value) {
      this.unknownT = null;
    }
  }

  public int getUnknownSSize() {
    return (this.unknownS == null) ? 0 : this.unknownS.size();
  }

  public java.util.Iterator<String> getUnknownSIterator() {
    return (this.unknownS == null) ? null : this.unknownS.iterator();
  }

  public void addToUnknownS(String elem) {
    if (this.unknownS == null) {
      this.unknownS = new ArrayList<String>();
    }
    this.unknownS.add(elem);
  }

  public List<String> getUnknownS() {
    return this.unknownS;
  }

  public void setUnknownS(List<String> unknownS) {
    this.unknownS = unknownS;
  }

  public void unsetUnknownS() {
    this.unknownS = null;
  }

  /** Returns true if field unknownS is set (has been asigned a value) and false otherwise */
  public boolean isSetUnknownS() {
    return this.unknownS != null;
  }

  public void setUnknownSIsSet(boolean value) {
    if (!value) {
      this.unknownS = null;
    }
  }

  public int getUnknownPiSize() {
    return (this.unknownPi == null) ? 0 : this.unknownPi.size();
  }

  public java.util.Iterator<String> getUnknownPiIterator() {
    return (this.unknownPi == null) ? null : this.unknownPi.iterator();
  }

  public void addToUnknownPi(String elem) {
    if (this.unknownPi == null) {
      this.unknownPi = new ArrayList<String>();
    }
    this.unknownPi.add(elem);
  }

  public List<String> getUnknownPi() {
    return this.unknownPi;
  }

  public void setUnknownPi(List<String> unknownPi) {
    this.unknownPi = unknownPi;
  }

  public void unsetUnknownPi() {
    this.unknownPi = null;
  }

  /** Returns true if field unknownPi is set (has been asigned a value) and false otherwise */
  public boolean isSetUnknownPi() {
    return this.unknownPi != null;
  }

  public void setUnknownPiIsSet(boolean value) {
    if (!value) {
      this.unknownPi = null;
    }
  }

  public int getUnknownCSize() {
    return (this.unknownC == null) ? 0 : this.unknownC.size();
  }

  public java.util.Iterator<String> getUnknownCIterator() {
    return (this.unknownC == null) ? null : this.unknownC.iterator();
  }

  public void addToUnknownC(String elem) {
    if (this.unknownC == null) {
      this.unknownC = new ArrayList<String>();
    }
    this.unknownC.add(elem);
  }

  public List<String> getUnknownC() {
    return this.unknownC;
  }

  public void setUnknownC(List<String> unknownC) {
    this.unknownC = unknownC;
  }

  public void unsetUnknownC() {
    this.unknownC = null;
  }

  /** Returns true if field unknownC is set (has been asigned a value) and false otherwise */
  public boolean isSetUnknownC() {
    return this.unknownC != null;
  }

  public void setUnknownCIsSet(boolean value) {
    if (!value) {
      this.unknownC = null;
    }
  }

  public long getTimestamp() {
    return this.timestamp;
  }

  public void setTimestamp(long timestamp) {
    this.timestamp = timestamp;
    setTimestampIsSet(true);
  }

  public void unsetTimestamp() {
    __isset_bit_vector.clear(__TIMESTAMP_ISSET_ID);
  }

  /** Returns true if field timestamp is set (has been asigned a value) and false otherwise */
  public boolean isSetTimestamp() {
    return __isset_bit_vector.get(__TIMESTAMP_ISSET_ID);
  }

  public void setTimestampIsSet(boolean value) {
    __isset_bit_vector.set(__TIMESTAMP_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case SCRIBE_INFO:
      if (value == null) {
        unsetScribeInfo();
      } else {
        setScribeInfo((MiuiLogScribeInfo)value);
      }
      break;

    case LOG_TYPE:
      if (value == null) {
        unsetLogType();
      } else {
        setLogType((String)value);
      }
      break;

    case EVENT_TYPE:
      if (value == null) {
        unsetEventType();
      } else {
        setEventType((List<String>)value);
      }
      break;

    case PACKAGE_NAME:
      if (value == null) {
        unsetPackageName();
      } else {
        setPackageName((List<String>)value);
      }
      break;

    case WIFI_TYPE:
      if (value == null) {
        unsetWifiType();
      } else {
        setWifiType((List<String>)value);
      }
      break;

    case UNKNOWN_CT:
      if (value == null) {
        unsetUnknownCt();
      } else {
        setUnknownCt((List<String>)value);
      }
      break;

    case UNKNOWN_AT:
      if (value == null) {
        unsetUnknownAt();
      } else {
        setUnknownAt((List<String>)value);
      }
      break;

    case UNKNOWN_T:
      if (value == null) {
        unsetUnknownT();
      } else {
        setUnknownT((List<String>)value);
      }
      break;

    case UNKNOWN_S:
      if (value == null) {
        unsetUnknownS();
      } else {
        setUnknownS((List<String>)value);
      }
      break;

    case UNKNOWN_PI:
      if (value == null) {
        unsetUnknownPi();
      } else {
        setUnknownPi((List<String>)value);
      }
      break;

    case UNKNOWN_C:
      if (value == null) {
        unsetUnknownC();
      } else {
        setUnknownC((List<String>)value);
      }
      break;

    case TIMESTAMP:
      if (value == null) {
        unsetTimestamp();
      } else {
        setTimestamp((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case SCRIBE_INFO:
      return getScribeInfo();

    case LOG_TYPE:
      return getLogType();

    case EVENT_TYPE:
      return getEventType();

    case PACKAGE_NAME:
      return getPackageName();

    case WIFI_TYPE:
      return getWifiType();

    case UNKNOWN_CT:
      return getUnknownCt();

    case UNKNOWN_AT:
      return getUnknownAt();

    case UNKNOWN_T:
      return getUnknownT();

    case UNKNOWN_S:
      return getUnknownS();

    case UNKNOWN_PI:
      return getUnknownPi();

    case UNKNOWN_C:
      return getUnknownC();

    case TIMESTAMP:
      return new Long(getTimestamp());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been asigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case SCRIBE_INFO:
      return isSetScribeInfo();
    case LOG_TYPE:
      return isSetLogType();
    case EVENT_TYPE:
      return isSetEventType();
    case PACKAGE_NAME:
      return isSetPackageName();
    case WIFI_TYPE:
      return isSetWifiType();
    case UNKNOWN_CT:
      return isSetUnknownCt();
    case UNKNOWN_AT:
      return isSetUnknownAt();
    case UNKNOWN_T:
      return isSetUnknownT();
    case UNKNOWN_S:
      return isSetUnknownS();
    case UNKNOWN_PI:
      return isSetUnknownPi();
    case UNKNOWN_C:
      return isSetUnknownC();
    case TIMESTAMP:
      return isSetTimestamp();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof MiuiAdStoreServiceLogFiction)
      return this.equals((MiuiAdStoreServiceLogFiction)that);
    return false;
  }

  public boolean equals(MiuiAdStoreServiceLogFiction that) {
    if (that == null)
      return false;

    boolean this_present_scribeInfo = true && this.isSetScribeInfo();
    boolean that_present_scribeInfo = true && that.isSetScribeInfo();
    if (this_present_scribeInfo || that_present_scribeInfo) {
      if (!(this_present_scribeInfo && that_present_scribeInfo))
        return false;
      if (!this.scribeInfo.equals(that.scribeInfo))
        return false;
    }

    boolean this_present_logType = true && this.isSetLogType();
    boolean that_present_logType = true && that.isSetLogType();
    if (this_present_logType || that_present_logType) {
      if (!(this_present_logType && that_present_logType))
        return false;
      if (!this.logType.equals(that.logType))
        return false;
    }

    boolean this_present_eventType = true && this.isSetEventType();
    boolean that_present_eventType = true && that.isSetEventType();
    if (this_present_eventType || that_present_eventType) {
      if (!(this_present_eventType && that_present_eventType))
        return false;
      if (!this.eventType.equals(that.eventType))
        return false;
    }

    boolean this_present_packageName = true && this.isSetPackageName();
    boolean that_present_packageName = true && that.isSetPackageName();
    if (this_present_packageName || that_present_packageName) {
      if (!(this_present_packageName && that_present_packageName))
        return false;
      if (!this.packageName.equals(that.packageName))
        return false;
    }

    boolean this_present_wifiType = true && this.isSetWifiType();
    boolean that_present_wifiType = true && that.isSetWifiType();
    if (this_present_wifiType || that_present_wifiType) {
      if (!(this_present_wifiType && that_present_wifiType))
        return false;
      if (!this.wifiType.equals(that.wifiType))
        return false;
    }

    boolean this_present_unknownCt = true && this.isSetUnknownCt();
    boolean that_present_unknownCt = true && that.isSetUnknownCt();
    if (this_present_unknownCt || that_present_unknownCt) {
      if (!(this_present_unknownCt && that_present_unknownCt))
        return false;
      if (!this.unknownCt.equals(that.unknownCt))
        return false;
    }

    boolean this_present_unknownAt = true && this.isSetUnknownAt();
    boolean that_present_unknownAt = true && that.isSetUnknownAt();
    if (this_present_unknownAt || that_present_unknownAt) {
      if (!(this_present_unknownAt && that_present_unknownAt))
        return false;
      if (!this.unknownAt.equals(that.unknownAt))
        return false;
    }

    boolean this_present_unknownT = true && this.isSetUnknownT();
    boolean that_present_unknownT = true && that.isSetUnknownT();
    if (this_present_unknownT || that_present_unknownT) {
      if (!(this_present_unknownT && that_present_unknownT))
        return false;
      if (!this.unknownT.equals(that.unknownT))
        return false;
    }

    boolean this_present_unknownS = true && this.isSetUnknownS();
    boolean that_present_unknownS = true && that.isSetUnknownS();
    if (this_present_unknownS || that_present_unknownS) {
      if (!(this_present_unknownS && that_present_unknownS))
        return false;
      if (!this.unknownS.equals(that.unknownS))
        return false;
    }

    boolean this_present_unknownPi = true && this.isSetUnknownPi();
    boolean that_present_unknownPi = true && that.isSetUnknownPi();
    if (this_present_unknownPi || that_present_unknownPi) {
      if (!(this_present_unknownPi && that_present_unknownPi))
        return false;
      if (!this.unknownPi.equals(that.unknownPi))
        return false;
    }

    boolean this_present_unknownC = true && this.isSetUnknownC();
    boolean that_present_unknownC = true && that.isSetUnknownC();
    if (this_present_unknownC || that_present_unknownC) {
      if (!(this_present_unknownC && that_present_unknownC))
        return false;
      if (!this.unknownC.equals(that.unknownC))
        return false;
    }

    boolean this_present_timestamp = true;
    boolean that_present_timestamp = true;
    if (this_present_timestamp || that_present_timestamp) {
      if (!(this_present_timestamp && that_present_timestamp))
        return false;
      if (this.timestamp != that.timestamp)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    HashCodeBuilder builder = new HashCodeBuilder();

    boolean present_scribeInfo = true && (isSetScribeInfo());
    builder.append(present_scribeInfo);
    if (present_scribeInfo)
      builder.append(scribeInfo);

    boolean present_logType = true && (isSetLogType());
    builder.append(present_logType);
    if (present_logType)
      builder.append(logType);

    boolean present_eventType = true && (isSetEventType());
    builder.append(present_eventType);
    if (present_eventType)
      builder.append(eventType);

    boolean present_packageName = true && (isSetPackageName());
    builder.append(present_packageName);
    if (present_packageName)
      builder.append(packageName);

    boolean present_wifiType = true && (isSetWifiType());
    builder.append(present_wifiType);
    if (present_wifiType)
      builder.append(wifiType);

    boolean present_unknownCt = true && (isSetUnknownCt());
    builder.append(present_unknownCt);
    if (present_unknownCt)
      builder.append(unknownCt);

    boolean present_unknownAt = true && (isSetUnknownAt());
    builder.append(present_unknownAt);
    if (present_unknownAt)
      builder.append(unknownAt);

    boolean present_unknownT = true && (isSetUnknownT());
    builder.append(present_unknownT);
    if (present_unknownT)
      builder.append(unknownT);

    boolean present_unknownS = true && (isSetUnknownS());
    builder.append(present_unknownS);
    if (present_unknownS)
      builder.append(unknownS);

    boolean present_unknownPi = true && (isSetUnknownPi());
    builder.append(present_unknownPi);
    if (present_unknownPi)
      builder.append(unknownPi);

    boolean present_unknownC = true && (isSetUnknownC());
    builder.append(present_unknownC);
    if (present_unknownC)
      builder.append(unknownC);

    boolean present_timestamp = true;
    builder.append(present_timestamp);
    if (present_timestamp)
      builder.append(timestamp);

    return builder.toHashCode();
  }

  public int compareTo(MiuiAdStoreServiceLogFiction other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    MiuiAdStoreServiceLogFiction typedOther = (MiuiAdStoreServiceLogFiction)other;

    lastComparison = Boolean.valueOf(isSetScribeInfo()).compareTo(typedOther.isSetScribeInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetScribeInfo()) {
      lastComparison = TBaseHelper.compareTo(this.scribeInfo, typedOther.scribeInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLogType()).compareTo(typedOther.isSetLogType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLogType()) {
      lastComparison = TBaseHelper.compareTo(this.logType, typedOther.logType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEventType()).compareTo(typedOther.isSetEventType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEventType()) {
      lastComparison = TBaseHelper.compareTo(this.eventType, typedOther.eventType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPackageName()).compareTo(typedOther.isSetPackageName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPackageName()) {
      lastComparison = TBaseHelper.compareTo(this.packageName, typedOther.packageName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWifiType()).compareTo(typedOther.isSetWifiType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWifiType()) {
      lastComparison = TBaseHelper.compareTo(this.wifiType, typedOther.wifiType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUnknownCt()).compareTo(typedOther.isSetUnknownCt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUnknownCt()) {
      lastComparison = TBaseHelper.compareTo(this.unknownCt, typedOther.unknownCt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUnknownAt()).compareTo(typedOther.isSetUnknownAt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUnknownAt()) {
      lastComparison = TBaseHelper.compareTo(this.unknownAt, typedOther.unknownAt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUnknownT()).compareTo(typedOther.isSetUnknownT());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUnknownT()) {
      lastComparison = TBaseHelper.compareTo(this.unknownT, typedOther.unknownT);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUnknownS()).compareTo(typedOther.isSetUnknownS());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUnknownS()) {
      lastComparison = TBaseHelper.compareTo(this.unknownS, typedOther.unknownS);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUnknownPi()).compareTo(typedOther.isSetUnknownPi());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUnknownPi()) {
      lastComparison = TBaseHelper.compareTo(this.unknownPi, typedOther.unknownPi);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUnknownC()).compareTo(typedOther.isSetUnknownC());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUnknownC()) {
      lastComparison = TBaseHelper.compareTo(this.unknownC, typedOther.unknownC);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTimestamp()).compareTo(typedOther.isSetTimestamp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTimestamp()) {
      lastComparison = TBaseHelper.compareTo(this.timestamp, typedOther.timestamp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // SCRIBE_INFO
          if (field.type == TType.STRUCT) {
            this.scribeInfo = new MiuiLogScribeInfo();
            this.scribeInfo.read(iprot);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // LOG_TYPE
          if (field.type == TType.STRING) {
            this.logType = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // EVENT_TYPE
          if (field.type == TType.LIST) {
            {
              TList _list0 = iprot.readListBegin();
              this.eventType = new ArrayList<String>(_list0.size);
              for (int _i1 = 0; _i1 < _list0.size; ++_i1)
              {
                String _elem2;
                _elem2 = iprot.readString();
                this.eventType.add(_elem2);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // PACKAGE_NAME
          if (field.type == TType.LIST) {
            {
              TList _list3 = iprot.readListBegin();
              this.packageName = new ArrayList<String>(_list3.size);
              for (int _i4 = 0; _i4 < _list3.size; ++_i4)
              {
                String _elem5;
                _elem5 = iprot.readString();
                this.packageName.add(_elem5);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5: // WIFI_TYPE
          if (field.type == TType.LIST) {
            {
              TList _list6 = iprot.readListBegin();
              this.wifiType = new ArrayList<String>(_list6.size);
              for (int _i7 = 0; _i7 < _list6.size; ++_i7)
              {
                String _elem8;
                _elem8 = iprot.readString();
                this.wifiType.add(_elem8);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 6: // UNKNOWN_CT
          if (field.type == TType.LIST) {
            {
              TList _list9 = iprot.readListBegin();
              this.unknownCt = new ArrayList<String>(_list9.size);
              for (int _i10 = 0; _i10 < _list9.size; ++_i10)
              {
                String _elem11;
                _elem11 = iprot.readString();
                this.unknownCt.add(_elem11);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 7: // UNKNOWN_AT
          if (field.type == TType.LIST) {
            {
              TList _list12 = iprot.readListBegin();
              this.unknownAt = new ArrayList<String>(_list12.size);
              for (int _i13 = 0; _i13 < _list12.size; ++_i13)
              {
                String _elem14;
                _elem14 = iprot.readString();
                this.unknownAt.add(_elem14);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 8: // UNKNOWN_T
          if (field.type == TType.LIST) {
            {
              TList _list15 = iprot.readListBegin();
              this.unknownT = new ArrayList<String>(_list15.size);
              for (int _i16 = 0; _i16 < _list15.size; ++_i16)
              {
                String _elem17;
                _elem17 = iprot.readString();
                this.unknownT.add(_elem17);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 9: // UNKNOWN_S
          if (field.type == TType.LIST) {
            {
              TList _list18 = iprot.readListBegin();
              this.unknownS = new ArrayList<String>(_list18.size);
              for (int _i19 = 0; _i19 < _list18.size; ++_i19)
              {
                String _elem20;
                _elem20 = iprot.readString();
                this.unknownS.add(_elem20);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 10: // UNKNOWN_PI
          if (field.type == TType.LIST) {
            {
              TList _list21 = iprot.readListBegin();
              this.unknownPi = new ArrayList<String>(_list21.size);
              for (int _i22 = 0; _i22 < _list21.size; ++_i22)
              {
                String _elem23;
                _elem23 = iprot.readString();
                this.unknownPi.add(_elem23);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 11: // UNKNOWN_C
          if (field.type == TType.LIST) {
            {
              TList _list24 = iprot.readListBegin();
              this.unknownC = new ArrayList<String>(_list24.size);
              for (int _i25 = 0; _i25 < _list24.size; ++_i25)
              {
                String _elem26;
                _elem26 = iprot.readString();
                this.unknownC.add(_elem26);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 12: // TIMESTAMP
          if (field.type == TType.I64) {
            this.timestamp = iprot.readI64();
            setTimestampIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (this.scribeInfo != null) {
      oprot.writeFieldBegin(SCRIBE_INFO_FIELD_DESC);
      this.scribeInfo.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.logType != null) {
      oprot.writeFieldBegin(LOG_TYPE_FIELD_DESC);
      oprot.writeString(this.logType);
      oprot.writeFieldEnd();
    }
    if (this.eventType != null) {
      oprot.writeFieldBegin(EVENT_TYPE_FIELD_DESC);
      {
        oprot.writeListBegin(new TList(TType.STRING, this.eventType.size()));
        for (String _iter27 : this.eventType)
        {
          oprot.writeString(_iter27);
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
    if (this.packageName != null) {
      oprot.writeFieldBegin(PACKAGE_NAME_FIELD_DESC);
      {
        oprot.writeListBegin(new TList(TType.STRING, this.packageName.size()));
        for (String _iter28 : this.packageName)
        {
          oprot.writeString(_iter28);
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
    if (this.wifiType != null) {
      oprot.writeFieldBegin(WIFI_TYPE_FIELD_DESC);
      {
        oprot.writeListBegin(new TList(TType.STRING, this.wifiType.size()));
        for (String _iter29 : this.wifiType)
        {
          oprot.writeString(_iter29);
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
    if (this.unknownCt != null) {
      oprot.writeFieldBegin(UNKNOWN_CT_FIELD_DESC);
      {
        oprot.writeListBegin(new TList(TType.STRING, this.unknownCt.size()));
        for (String _iter30 : this.unknownCt)
        {
          oprot.writeString(_iter30);
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
    if (this.unknownAt != null) {
      oprot.writeFieldBegin(UNKNOWN_AT_FIELD_DESC);
      {
        oprot.writeListBegin(new TList(TType.STRING, this.unknownAt.size()));
        for (String _iter31 : this.unknownAt)
        {
          oprot.writeString(_iter31);
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
    if (this.unknownT != null) {
      oprot.writeFieldBegin(UNKNOWN_T_FIELD_DESC);
      {
        oprot.writeListBegin(new TList(TType.STRING, this.unknownT.size()));
        for (String _iter32 : this.unknownT)
        {
          oprot.writeString(_iter32);
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
    if (this.unknownS != null) {
      oprot.writeFieldBegin(UNKNOWN_S_FIELD_DESC);
      {
        oprot.writeListBegin(new TList(TType.STRING, this.unknownS.size()));
        for (String _iter33 : this.unknownS)
        {
          oprot.writeString(_iter33);
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
    if (this.unknownPi != null) {
      oprot.writeFieldBegin(UNKNOWN_PI_FIELD_DESC);
      {
        oprot.writeListBegin(new TList(TType.STRING, this.unknownPi.size()));
        for (String _iter34 : this.unknownPi)
        {
          oprot.writeString(_iter34);
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
    if (this.unknownC != null) {
      oprot.writeFieldBegin(UNKNOWN_C_FIELD_DESC);
      {
        oprot.writeListBegin(new TList(TType.STRING, this.unknownC.size()));
        for (String _iter35 : this.unknownC)
        {
          oprot.writeString(_iter35);
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(TIMESTAMP_FIELD_DESC);
    oprot.writeI64(this.timestamp);
    oprot.writeFieldEnd();
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("MiuiAdStoreServiceLogFiction(");
    boolean first = true;

    sb.append("scribeInfo:");
    if (this.scribeInfo == null) {
      sb.append("null");
    } else {
      sb.append(this.scribeInfo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("logType:");
    if (this.logType == null) {
      sb.append("null");
    } else {
      sb.append(this.logType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("eventType:");
    if (this.eventType == null) {
      sb.append("null");
    } else {
      sb.append(this.eventType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("packageName:");
    if (this.packageName == null) {
      sb.append("null");
    } else {
      sb.append(this.packageName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("wifiType:");
    if (this.wifiType == null) {
      sb.append("null");
    } else {
      sb.append(this.wifiType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("unknownCt:");
    if (this.unknownCt == null) {
      sb.append("null");
    } else {
      sb.append(this.unknownCt);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("unknownAt:");
    if (this.unknownAt == null) {
      sb.append("null");
    } else {
      sb.append(this.unknownAt);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("unknownT:");
    if (this.unknownT == null) {
      sb.append("null");
    } else {
      sb.append(this.unknownT);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("unknownS:");
    if (this.unknownS == null) {
      sb.append("null");
    } else {
      sb.append(this.unknownS);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("unknownPi:");
    if (this.unknownPi == null) {
      sb.append("null");
    } else {
      sb.append(this.unknownPi);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("unknownC:");
    if (this.unknownC == null) {
      sb.append("null");
    } else {
      sb.append(this.unknownC);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("timestamp:");
    sb.append(this.timestamp);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

